# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-03-23 21:09
from __future__ import unicode_literals

from django.db import migrations

TOWNNEWS_SITES = [("agnet.net", "agNET", "agNET Ag News & Commodities"),
                  ("atlanticcityweekly.com", "atlanticcityweekly.com", "Atlantic City Weekly"),
                  ("brazossports.com", "BrazosSports", "Bryan-College Station Eagle"),
                  ("clarindaherald.com", "clarindaherald.com", "Clarinda Herald-Journal"),
                  ("dailyprogress.com", "dailyprogress.com", "Daily Progress"),
                  ("dbrnews.com", "Bulletin Review Online", "Dennison Bulletin Review"),
                  ("dothaneagle.com", "dothaneagle.com", "Dothan Eagle"),
                  ("fredericksburg.com", "fredericksburg.com", "Free Lance-Star"),
                  ("fredericksburgrelocationguide.com", "Fredericksburg Relocation Guide",
                   "Free Lance-Star"),
                  ("godanriver.com", "goDanRiver.com", "Danville Register & Bee"),
                  ("greensboro.com", "N&R greensboro.com", "Greensboro News & Record"),
                  ("heraldcourier.com", "heraldcourier.com", "Bristol Herald Courier"),
                  ("hickoryrecord.com", "HDR hickoryrecord.com", "Hickory Daily Record"),
                  ("independenttribune.com", "it", "Independent Tribune"),
                  ("jcfloridan.com", "jcfloridan.com", "Jackson County Floridan"),
                  ("journalnow.com", "journalnow.com", "Winston-Salem Journal"),
                  ("kearneyhub.com", "Kearney Hub", "Kearney Hub"),
                  ("lexch.com", "lexch.com", "Lexington Clipper-Herald"),
                  ("livewellnebraska.com", "livewell nebraska", "Omaha World-Herald"),
                  # well, this site apparently ties to two papers. Will be a problem if we ever
                  # have to deal with them separately.
                  ("loganwoodbine.com", "loganwoodbine.com",
                   "Logan Herald-Observer / Woodbine Twiner"),
                  ("martinsvillebulletin.com", "martinsvillebulletin.com", "Martinsville Bulletin"),
                  ("mcdowellnews.com", "mcdowellnews.com", "McDowell News"),
                  ("mooresvilletribune.com", "Mooresville Tribune", "Mooresville Tribune"),
                  ("morganton.com", "The News Herald", "News Herald"),
                  ("myaggienation.com", "My Aggie Nation", "Bryan-College Station Eagle"),
                  ("neprepzone.com", "NE Prep Zone", "Omaha World-Herald"),
                  ("newsadvance.com", "The News & Advance", "News & Advance"),
                  ("nonpareilonline.com", "The Daily Nonpareil", "Daily Nonpareil"),
                  ("nptelegraph.com", "nptelegraph.com", "North Platte Telegraph"),
                  ("oanow.com", "oanow.com", "Opelika-Auburn News"),
                  ("omaha.com", "omaha.com", "Omaha World-Herald"),
                  ("pressofatlanticcity.com", "pressofatlanticcity.com", "Press of Atlantic City"),
                  ("richmond.com", "RTD", "Richmond Times-Dispatch"),
                  ("roanoke.com", "The Roanoke Times", "Roanoke Times"),
                  ("scnow.com", "scnow.com", "Florence Morning News"),
                  ("shopbrazos.com", "shopbrazos.com", "Bryan-College Station Eagle"),
                  ("shorenewstoday.com", "Shore News Today", "Press of Atlantic City"),
                  ("smithmountainlake.com", "smithmountainlake.com", "Laker Media"),
                  ("starherald.com", "starherald.com", "Scottsbluff Star-Herald"),
                  ("statesville.com", "Statesville Record & Landmark",
                   "Statesville Record & Landmark"),
                  ("swvatoday.com", "swvatoday.com", "Wytheville Enterprise"),
                  # also Washington County News, Smyth County News & Messenger, The Floyd Press,
                  # Bland County Messenger, Clinch Valley News, Richlands News-Press
                  ("thecornernews.com", "The Corner", "Corner News"),
                  ("theeagle.com", "The Eagle", "Bryan-College Station Eagle"),
                  ("thefranklinnewspost.com", "The Franklin News-Post", "Franklin News-Post"),
                  ("theindependent.com", "The Grand Island Independent",
                   "Grand Island Independent"),
                  ("tulsaworld.com", "Tulsa World", "Tulsa World"),
                  ("valleynewstoday.com", "The Valley News", "Valley News"),
                  ("wacotrib.com", "WacoTrib.com", "Waco Tribune-Herald"),
                  ("wahoo-ashland-waverly.com", "Wahoo Newspaper", "Suburban Newspapers"),
                  ("yorknewstimes.com", "York News-Times", "York News-Times"), ]


def load_newspapers(apps, _):
    NewsPaper = apps.get_model("papers", "NewsPaper")
    paper_names = set([paper for _, _2, paper in TOWNNEWS_SITES])
    for name in paper_names:
        new_paper = NewsPaper(name=name)
        new_paper.full_clean()
        new_paper.save()


def unload_newspapers(apps, _):
    NewsPaper = apps.get_model("papers", "NewsPaper")
    paper_names = set([paper for _, _2, paper in TOWNNEWS_SITES])
    for name in paper_names:
        try:
            the_paper = NewsPaper.objects.get(name=name)
            the_paper.delete()
        except NewsPaper.DoesNotExist:
            pass


def load_sites(apps, _):
    TownnewsSite = apps.get_model("papers", "TownnewsSite")
    NewsPaper = apps.get_model("papers", "NewsPaper")
    for url, name, paper in TOWNNEWS_SITES:
        the_paper = NewsPaper.objects.get(name=paper)
        new_site = TownnewsSite(URL="http://"+url, name=name, paper=the_paper)
        new_site.full_clean()
        new_site.save()


def unload_sites(apps, _):
    TownnewsSite = apps.get_model("papers", "TownnewsSite")
    for url, _, _ in TOWNNEWS_SITES:
        try:
            the_site = TownnewsSite.objects.get(URL="http://"+url)
            the_site.delete()
        except TownnewsSite.DoesNotExist:
            pass


class Migration(migrations.Migration):

    dependencies = [
        ('papers', '0001_initial'),
    ]

    operations = [
        migrations.operations.RunPython(load_newspapers, reverse_code=unload_newspapers),
        migrations.operations.RunPython(load_sites, reverse_code=unload_sites),
    ]
